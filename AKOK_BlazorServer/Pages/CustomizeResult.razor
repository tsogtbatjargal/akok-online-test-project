@page "/customizeresult"
@using AKOK_BlazorServer.Data
@using AKOK_BlazorServer.Services
@inject ResultTextService ResultTextService
@inject IConfiguration Configuration
@inject NavigationManager NavigationManager

<h1>Customize Result Text</h1>

<div class="form-group">
    <label for="number">Number:</label>
    <select class="form-control" id="number" @onchange="@((ChangeEventArgs args) => UpdateLongText(args.Value.ToString()))">
        @foreach (var number in Numbers)
        {
            <option value="@number">@number</option>
        }
    </select>
</div>

<div class="form-group">
    <label for="longText">Long Text:</label>
    <textarea class="form-control" id="longText" rows="3" @bind="@longText"></textarea>
</div>
<button type="button" class="btn btn-primary" @onclick="@Save">Save</button>
<button type="button" class="btn btn-secondary" @onclick="@Cancel">Cancel</button>

<div class="form-group">
    <label for="secretCode">Secret Code:</label>
    
    <InputText id="txtSecretCode" class="form-control" readonly @bind-value="sixDigitNumber"
               ValueExpression="@(() => sixDigitNumber)" />

</div>


<button type="button" class="btn btn-primary" @onclick="GenerateCode">Generate Code</button>

@code {
    private int selectedNumber { get; set; }
    private string longText { get; set; }
    private string secretCode { get; set; }
    private string sixDigitNumber { get; set; }

    private readonly List<int> Numbers = new List<int>
    {
        1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 22
    };

    private void GenerateCode()
    {
        var random = GenerateSixDigitNumber();
        sixDigitNumber = random.ToString();

    }

    private int GenerateSixDigitNumber()
    {
        var random = new Random();
        return random.Next(100000, 999999);
    }

    protected override void OnInitialized()
    {
        selectedNumber = Numbers.First();
        longText = ResultTextService.GetLongText(selectedNumber);
    }

    private void Save()
    {
        Configuration[$"longText:{selectedNumber}"] = longText;
        NavigationManager.NavigateTo("/customizeresult");
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo(NavigationManager.Uri, forceLoad: true);
    }

    private void UpdateLongText(string value)
    {
        selectedNumber = int.Parse(value);
        longText = ResultTextService.GetLongText(selectedNumber);
    }
}