@page "/admin"
@using AKOK_BlazorServer.Data
@using AKOK_BlazorServer.Services
@inject ResultTextService ResultTextService
@inject IConfiguration Configuration
@inject NavigationManager NavigationManager

<h3>Admin Page</h3>

<div class="form-group">
    
    @if (generatedCode != null)
    {
        <p>Your secret code is: @generatedCode</p>
    }
    else
    {
        <p>Click on Generate Code button for new code!</p>
    }
</div>

<button class="btn btn-secondary" @onclick="GenerateCode">Generate Code</button>
<button class="btn btn-primary" @onclick="StoreValue">Store Value</button>


<div class="form-group">
    <label for="number">Number:</label>
    <select class="form-control" id="number" @onchange="@((ChangeEventArgs args) => UpdateLongText(args.Value.ToString()))">
        @foreach (var number in Numbers)
        {
            <option value="@number">@number</option>
        }
    </select>
</div>

<div class="form-group">
    <label for="longText">Long Text:</label>
    <textarea class="form-control" id="longText" rows="3" @bind="@longText"></textarea>
</div>
<button type="button" class="btn btn-primary" @onclick="@Save">Save</button>
<button type="button" class="btn btn-secondary" @onclick="@Cancel">Cancel</button>


@code {
    private int selectedNumber { get; set; }
    private string longText { get; set; }
    
    private readonly List<int> Numbers = new List<int>
    {
        1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 22
    };

    private string generatedCode;

    private void GenerateCode()
    {
        Random random = new Random();
        generatedCode = random.Next(1000, 9999).ToString();        
    }

    private void StoreValue()
    {
        PassCode.SetValue(generatedCode);
    }




    protected override void OnInitialized()
    {
        selectedNumber = Numbers.First();
        longText = ResultTextService.GetLongText(selectedNumber);
        
    }

    private void Save()
    {
        Configuration[$"longText:{selectedNumber}"] = longText;
        NavigationManager.NavigateTo("/admin");
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo(NavigationManager.Uri, forceLoad: true);
    }

    private void UpdateLongText(string value)
    {
        selectedNumber = int.Parse(value);
        longText = ResultTextService.GetLongText(selectedNumber);
    }
}