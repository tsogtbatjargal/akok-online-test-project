@page "/feeconfirmbycode"

<TitleComponent TitleName="Confirmation"></TitleComponent>

<EditForm Model="@person" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="email">Email:</label>
        <InputText id="email" @bind-value="person.Email" ValueExpression="@(() => person.Email)" class="form-control" />
    </div>
    

    @if (showSubmitButton)
    {
        <div class="d-flex justify-content-center mt-4">
            <button type="submit" class="btn btn-primary mx-3">Submit</button>
        </div>        
    }
    
    @if (showSuccessMessage)
    {
        <div class="alert alert-success" role="alert">
            String matches the stored value!
        </div>
    }
    else if (showErrorMessage)
    {
        <div class="alert alert-danger" role="alert">
            String does not match the stored value.
        </div>
    }  


    <div class="form-group">
        <label for="inputString">Pass Code:</label>
        <input id="inputString" class="form-control" @bind-value="@inputString" />
    </div>

    <button class="btn btn-primary" @onclick="CheckString">Next</button>


</EditForm>

@code {

    private bool showSuccessMessage = false;
    private bool showErrorMessage = false;

    private string inputString;

    private Person person = new Person ();

    private bool showSubmitButton = false;
    protected override void OnInitialized()

    {        
        base.OnInitialized();
        person = ResultTextService.PersonResult;
    }

    private void CheckString()
    {
        //var tempCode = "1000"; // temp
        var storedPassCodes = PassCode.GetMyValue();
        if (storedPassCodes != null && storedPassCodes.Contains(inputString))
        //if ((storedPassCodes != null && storedPassCodes.Contains(inputString)) | tempCode == inputString)
        {
            showSuccessMessage = true;
            showErrorMessage = false;
            PassCode.RemoveValue(inputString);
        }
        else
        {
            showSuccessMessage = false;
            showErrorMessage = true;
        }
    }

    private void HandleValidSubmit()
    {
        if (!showErrorMessage)
        {
            ResultTextService.SetValueForPerson(person);
            NavigationManager.NavigateTo("/result");
        }
    }

}
