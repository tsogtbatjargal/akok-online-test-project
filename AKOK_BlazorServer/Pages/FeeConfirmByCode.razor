@page "/feeconfirmbycode"
@using AKOK_BlazorServer.Data
@using System.ComponentModel.DataAnnotations
@using System.Linq.Expressions;

@inject NavigationManager NavigationManager

<h3>Баталгаажуулалт</h3>

<EditForm Model="@feeConfirmation" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="email">Мэйл Хаяг:</label>
        <InputText id="email" @bind-value="feeConfirmation.Email" ValueExpression="@(() => feeConfirmation.Email)" class="form-control" />
    </div>
    

    @if (showSubmitButton)
    {
        <div class="d-flex justify-content-center mt-4">
            <button type="submit" class="btn btn-primary mx-3">Submit</button>
        </div>        
    }
    <h1>Confirm Code</h1>

    @if (showSuccessMessage)
    {
        <div class="alert alert-success" role="alert">
            String matches the stored value!
        </div>
    }
    else if (showErrorMessage)
    {
        <div class="alert alert-danger" role="alert">
            String does not match the stored value.
        </div>
    }  


    <div class="form-group">
        <label for="inputString">Input String:</label>
        <input id="inputString" class="form-control" @bind-value="@inputString" />
    </div>

    <button class="btn btn-primary" @onclick="CheckString">Check String</button>


</EditForm>

@code {

    private bool showSuccessMessage = false;
    private bool showErrorMessage = false;

    private string inputString;

    private FeeConfirmation feeConfirmation = new FeeConfirmation ();

    private bool showSubmitButton = false;
    protected override void OnInitialized()
    {        
        base.OnInitialized();

        var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);
        if (Microsoft.AspNetCore.WebUtilities.QueryHelpers.ParseQuery(uri.Query).TryGetValue("feeConfirmation", out var feeConfirmationJson))
        {
            feeConfirmation = System.Text.Json.JsonSerializer.Deserialize<FeeConfirmation>(feeConfirmationJson);
        }

    }

    private void CheckString()
    {
        var storedPassCodes = PassCode.GetMyValue();
        if (storedPassCodes != null && storedPassCodes.Contains(inputString))
        {
            showSuccessMessage = true;
            showErrorMessage = false;
            PassCode.RemoveValue(inputString);
        }
        else
        {
            showSuccessMessage = false;
            showErrorMessage = true;
        }
    }

    private void HandleValidSubmit()
    {
        if (!showErrorMessage)
        {
            var feeConfirmationJson = System.Text.Json.JsonSerializer.Serialize(feeConfirmation);
            NavigationManager.NavigateTo($"/result?feeConfirmation={Uri.EscapeDataString(feeConfirmationJson)}");
        }
    }

}
